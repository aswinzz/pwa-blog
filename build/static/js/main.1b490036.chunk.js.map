{"version":3,"sources":["logo.svg","pages/listing/card.js","pages/listing/appshell.js","pages/listing/index.js","pages/post/appshell.js","Header.js","pages/post/index.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["StyledContainer","styled","div","PostCard","post","url","id","to","className","feature_image","style","backgroundImage","backgroundSize","title","excerpt","src","alt","reading_time","map","item","height","process","active","loading","Footer","Layout","StyledHeader","Post","props","context","fetchData","a","pageNumber","setState","appShell","fetch","state","pagination","pageSize","res","json","response","console","log","posts","total","meta","pages","current","metadata","subtitle","this","backgroundColor","placement","trigger","content","marginTop","InfoCircleFilled","fontSize","marginLeft","initialLoad","pageStart","loadMore","hasMore","useWindow","textAlign","href","Component","Container","Item","margin","ArrowLeftOutlined","StyledDiv","StyledPostContainer","window","scrollTo","top","behavior","match","params","length","Header","dangerouslySetInnerHTML","__html","html","App","basename","exact","path","component","SinglePost","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.1b490036.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components';\n\n\nexport const StyledContainer = styled.div`\n    .post-card {\n        color: inherit;\n        text-decoration: none;\n    }\n\n    .post-card:hover {\n        text-decoration: none;\n    }\n\n    .post-card-tags {\n        margin: 0 0 5px 0;\n        font-size: 1.4rem;\n        line-height: 1.15em;\n        color: var(--color-secondary);\n    }\n\n\n    .post-card-title {\n        margin: 0 0 10px 0;\n        padding: 0;\n        color: #585858;\n        line-height: 1.15;\n        font-weight: 700;\n        text-rendering: optimizeLegibility;\n    }\n\n    .post-card-excerpt {\n        font-size: 16px;\n        line-height: 1.55em;\n        overflow-wrap: break-word;\n    }\n\n    .post-card-image {\n        margin: 0 0 10px 0;\n        width: auto;\n        height: 181px;\n        background: var(--color-secondary) no-repeat center center;\n        background-size: cover;\n    }\n\n    .post-card-footer {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        margin: 10px 0 0 0;\n        color: var(--color-secondary);\n    }\n\n    .post-card-footer-left {\n        display: flex;\n        align-items: center;\n    }\n\n    .post-card-footer-right {\n        display: flex;\n        flex-direction: column;\n    }\n\n    .post-card-avatar {\n        width: 30px;\n        height: 30px;\n        margin: 0 7px 0 0;\n        border-radius: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n\n    .post-card-avatar .author-profile-image {\n        display: block;\n        width: 100%;\n        background: var(--color-secondary);\n        border-radius: 100%;\n        object-fit: cover;\n    }\n\n    .post-card-avatar .default-avatar {\n        width: 26px;\n    }\n`;\n\nconst PostCard = ({ post }) => {\n    const url = `/blog/${post.id}`\n\n    return (\n        <StyledContainer>\n        <Link to={url} className=\"post-card\">\n            <header className=\"post-card-header\">\n                {post.feature_image &&\n                    <div className=\"post-card-image\" style={{\n                        backgroundImage: `url(${post.feature_image})` ,\n                        backgroundSize: 'cover'\n                    }}></div>}\n                {/* {post.tags && <div className=\"post-card-tags\"> <Tags post={post} visibility=\"public\" autolink={false} /></div>}\n                {post.featured && <span>Featured</span>} */}\n                <h2 className=\"post-card-title\">{post.title}</h2>\n            </header>\n            <section className=\"post-card-excerpt\">{post.excerpt}</section>\n            <footer className=\"post-card-footer\">\n                <div className=\"post-card-footer-left\">\n                    <div className=\"post-card-avatar\">\n                            <img className=\"author-profile-image\" src={'https://upload.wikimedia.org/wikipedia/commons/9/99/Sample_User_Icon.png'} alt={'Aswin'}/>\n                    </div>\n                    <span>Aswin</span>\n                </div>\n                {post.reading_time &&\n                <div className=\"post-card-footer-right\">\n                    <div>{post.reading_time} min read</div>\n                </div>}\n            </footer>\n        </Link>\n        </StyledContainer>\n    )\n}\n\nexport default PostCard\n","import React from 'react';\nimport { Skeleton } from 'antd';\nimport styled from 'styled-components';\n\nexport const StyledContainer = styled.div`\n    .post-card {\n        color: inherit;\n        text-decoration: none;\n    }\n\n    .post-card:hover {\n        text-decoration: none;\n    }\n\n    .post-card-tags {\n        margin: 0 0 5px 0;\n        font-size: 1.4rem;\n        line-height: 1.15em;\n        color: var(--color-secondary);\n    }\n\n\n    .post-card-title {\n        margin: 0 0 10px 0;\n        padding: 0;\n        color: #585858;\n        line-height: 1.15;\n        font-weight: 700;\n        text-rendering: optimizeLegibility;\n    }\n\n    .post-card-excerpt {\n        font-size: 16px;\n        line-height: 1.55em;\n        overflow-wrap: break-word;\n    }\n\n    .post-card-image {\n        margin: 0 0 10px 0;\n        width: auto;\n        height: 200px;\n        background: var(--color-secondary) no-repeat center center;\n        background-size: cover;\n    }\n\n    .post-card-footer {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        margin: 10px 0 0 0;\n        color: var(--color-secondary);\n    }\n\n    .post-card-footer-left {\n        display: flex;\n        align-items: center;\n    }\n\n    .post-card-footer-right {\n        display: flex;\n        flex-direction: column;\n    }\n\n    .post-card-avatar {\n        width: 30px;\n        height: 30px;\n        margin: 0 7px 0 0;\n        border-radius: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n\n    .post-card-avatar .author-profile-image {\n        display: block;\n        width: 100%;\n        background: var(--color-secondary);\n        border-radius: 100%;\n        object-fit: cover;\n    }\n\n    .post-card-avatar .default-avatar {\n        width: 26px;\n    }\n`;\nexport default () => {\n  return (\n    <div className=\"container\">\n        <section className=\"post-feed\">\n            {[1,2,3,4,5,6].map(item => {\n                return <>\n                <StyledContainer>\n                    <div className=\"post-card\">\n                        <header className=\"post-card-header\">\n                                <div className=\"post-card-image\" style={{\n                                    height: 275,\n                                    backgroundImage: `url(${process.env.PUBLIC_URL}/appshell.png)` ,\n                                }}></div>\n                            <Skeleton active loading={true}/>\n                        </header>\n                        <section className=\"post-card-excerpt\"><Skeleton active loading={true}/></section>\n                        <footer className=\"post-card-footer\">\n                        </footer>\n                        </div>\n                </StyledContainer>\n                </>\n            })}\n        </section>\n    </div>\n  );\n};","import React, { Component, ReactNode } from 'react';\nimport PostCard from './card';\nimport styled from 'styled-components';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport AppShell from './appshell';\nimport { Skeleton, Popover, Layout } from 'antd';\nimport { InfoCircleFilled } from '@ant-design/icons';\nconst { Footer } = Layout;\nexport const StyledContainer = styled.div`\n  margin: 80px 0;\n  .post-feed {\n    display: grid;\n    justify-content: space-between;\n    grid-gap: 30px;\n    /* grid-template-columns: 1fr 1fr 1fr; */\n    grid-template-columns: repeat(3, minmax(0, 1fr));\n  }\n\n  @media (max-width: 980px) {\n    .post-feed {\n      grid-template-columns: 1fr 1fr !important;\n    }\n  }\n  @media (max-width: 680px) {\n    .post-feed {\n      grid-template-columns: 1fr !important;\n    }\n  }\n\n  .container {\n    max-width: 1120px;\n    margin: 0 auto;\n    padding: 0 4vw;\n    padding-bottom: 100px;\n  }\n`;\n\nconst StyledHeader = styled.div`\n\n.site-head {\n    padding-top: 20px;\n    padding-bottom: 20px;\n    color: #fff;\n    background: var(--color-base);\n    background-position: center;\n    background-size: cover;\n}\n\n.container {\n    max-width: 1120px;\n    margin: 0 auto;\n    padding: 0 4vw;\n}\n\n.site-banner {\n    max-width: 80%;\n    margin: 0 auto;\n    padding: 10vw 0;\n    text-align: center;\n}\n\n.site-banner-title {\n    margin: 0;\n    padding: 0;\n    color: #fff;\n    font-size: 4rem;\n    line-height: 1.3em;\n}\n\n.site-banner-desc {\n    margin: 5px 0 0 0;\n    padding: 0;\n    font-size: 2.4rem;\n    line-height: 1.3em;\n    opacity: 0.7;\n}\n`;\n\nexport default class Post extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      posts: [],\n      metadata: {\n        title: 'Blog',\n        subtitle: 'A Simple React Application for blogs'\n      },\n      pagination: {\n        current: 0,\n        pageSize: 9,\n        total: 0\n      },\n      loading: false,\n      appShell: false\n    };\n  }\n\n  async componentDidMount() {\n    await this.fetchData(1);\n  }\n\n  fetchData = async (pageNumber = 1) => {\n    this.setState({\n      loading: true,\n      appShell: pageNumber === 1\n    });\n    try {\n      const res = await fetch(`https://demo.ghost.io/ghost/api/v3/content/posts/?key=22444f78447824223cefc48062&limit=${this.state.pagination.pageSize}&page=${pageNumber}`);\n      const response = await res.json();\n      console.log(response);\n      if (response && response.posts) {\n          this.setState({\n              posts: [...this.state.posts, ...response.posts],\n              pagination: {\n                ...this.state.pagination,\n                total: response.meta.pagination.pages,\n                current: pageNumber\n              },\n              loading: false,\n              appShell: false,\n        });\n      }\n    } catch (e) {\n      this.setState({loading: false, appShell: false})\n    }\n  };\n\n  render() {\n    return (\n      <div style={{backgroundColor: 'white'}}>\n        {/* <Header /> */}\n        <StyledHeader>\n        <header className=\"site-head\" \n            style={{ backgroundImage: `url(${process.env.PUBLIC_URL}/cover.jpg)` }}\n        >\n            <div className=\"container\">\n                <div className=\"site-banner\">\n                    <h1 className=\"site-banner-title\">{this.state.metadata.title}</h1>\n                    <p className=\"site-banner-desc\">{this.state.metadata.subtitle} \n                    <sup>\n                    <Popover placement='top' trigger=\"hover\" content={<ul style={{marginTop: 10}}>\n                        <li>This is an application bootstrapped using CRA, so SSR has not been implemented</li>\n                        <li>The data is fetched from a public api from Ghost, so there might be some delay in the response</li>\n                        <li>This application was built only for learning purpose</li>\n                    </ul>}>\n                        <InfoCircleFilled style={{fontSize:20, marginLeft:5}}/>\n                    </Popover>\n                    </sup>\n                    </p>\n                </div>\n            </div>\n        </header>\n        </StyledHeader>\n        <StyledContainer>\n          {this.state.appShell ? \n          <AppShell/>\n          :\n          <InfiniteScroll\n            // className=\"infiniteScroll\"\n            initialLoad={true}\n            pageStart={0}\n            loadMore={() => {\n              if (\n                !this.state.loading &&\n                this.state.pagination.current < this.state.pagination.total\n              ) {\n                this.fetchData(this.state.pagination.current + 1);\n              }\n            }}\n            hasMore={true}\n            useWindow={true}\n          >\n            <div className=\"container\">\n              <section className=\"post-feed\">\n                {this.state.posts.map((post) => (\n                  <PostCard key={post.id} post={post} />\n                ))}\n                  {this.state.loading ? [1,2,3].map(item => {\n                        return <>\n                        <StyledContainer>\n                            <div className=\"post-card\">\n                                <header className=\"post-card-header\">\n                                        {/* <div className=\"post-card-image\" style={{\n                                            height: 335,\n                                            backgroundSize: 'cover',\n                                            backgroundImage: `url(/appshell.png)` ,\n                                        }}></div> */}\n                                    <Skeleton active loading={true}/>\n                                </header>\n                                <section className=\"post-card-excerpt\"><Skeleton active loading={true}/></section>\n                                <footer className=\"post-card-footer\">\n                                </footer>\n                                </div>\n                        </StyledContainer>\n                        </>\n                    })\n                  : ''}\n              </section>\n            </div>\n          </InfiniteScroll>}\n        </StyledContainer>\n        <Footer style={{ textAlign: 'center' }}>Created with ♡ by <a href='https://github.com/aswinzz'>@aswinzz</a></Footer>\n        {/* <Footer /> */}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Skeleton } from 'antd';\n\nexport default () => {\n  return (\n    <div className=\"container\">\n    <article className=\"content\">\n        \n        <section className=\"post-full-content\">\n          <figure style={{marginTop: 50}} className=\"post-feature-image\">\n            {/* <img src={`/appshell.png`} /> */}\n          </figure>\n            {/* <h1 className=\"content-title\">......</h1> */}\n            <Skeleton active loading={true}/>\n            <Skeleton active loading={true}/>\n            <Skeleton active loading={true}/>\n            <Skeleton active loading={true}/>\n            <Skeleton active loading={true}/>\n            <Skeleton active loading={true}/>\n            <Skeleton active loading={true}/>\n            <Skeleton active loading={true}/>\n\n            {/* The main post content */ }\n            {/* <root.div> */}\n            <section\n                className=\"content-body load-external-scripts\"\n            >\n              \n            </section>\n            {/* </root.div> */}\n        </section>\n    </article>\n</div>\n  );\n};","import React from 'react';\nimport styled from 'styled-components';\nimport { ArrowLeftOutlined   } from '@ant-design/icons';\nimport { Link } from 'react-router-dom';\n\nconst Container = styled.div`\n    display: flex;\n`;\n\nconst Item = styled.div`\n    flex: 1;\n`;\n\nexport default () => {\n  return (\n    <Container>\n       <Item  style={{\n                fontSize: 22,\n                margin: '0 0 20px 0'\n        }} >\n        <Link to='/'>\n        <ArrowLeftOutlined/> Back\n        </Link>\n       </Item>\n    </Container>\n  );\n};","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { HomeOutlined } from '@ant-design/icons';\nimport AppShell from './appshell';\nimport Header from '../../Header';\nimport {Layout} from 'antd';\nconst { Footer } = Layout;\nexport const StyledDiv = styled.div`\narticle.content {\n    padding-bottom: 100px;\n}\n article.content ol, article.content ul {\n\t list-style: none;\n}\n article.content blockquote, article.content q {\n\t quotes: none;\n}\n article.content blockquote:before, article.content blockquote:after, article.content q:before, article.content q:after {\n\t content: \"\";\n\t content: none;\n}\n article.content table {\n\t border-spacing: 0;\n\t border-collapse: collapse;\n}\n article.content img {\n\t max-width: 100%;\n\t height: auto;\n}\n article.content *, article.content *:before, article.content *:after {\n\t box-sizing: inherit;\n}\n article.content b, article.content strong {\n\t font-weight: bold;\n}\n article.content i, article.content em, article.content dfn {\n\t font-style: italic;\n}\n article.content sub, article.content sup {\n\t position: relative;\n\t font-size: 75%;\n\t line-height: 0;\n\t vertical-align: baseline;\n}\n article.content sup {\n\t top: -0.5em;\n}\n article.content sub {\n\t bottom: -0.25em;\n}\n article.content img {\n\t border: 0;\n}\n article.content mark {\n\t background-color: #fdffb6;\n}\n article.content code, article.content kbd, article.content pre, article.content samp {\n\t font-family: monospace, monospace;\n\t font-size: 1em;\n}\n article.content legend {\n\t padding: 0;\n\t/* 2 */\n\t border: 0;\n\t/* 1 */\n}\n article.content table {\n\t border-spacing: 0;\n\t border-collapse: collapse;\n}\n article.content td, article.content th {\n\t padding: 0;\n}\n article.content hr {\n\t position: relative;\n\t display: block;\n\t width: 100%;\n\t margin: 2.5em 0 3.5em;\n\t padding: 0;\n\t height: 1px;\n\t border: 0;\n\t border-top: 1px solid #f0f0f0;\n}\n article.content audio, article.content canvas, article.content iframe, article.content img, article.content svg, article.content video {\n\t vertical-align: middle;\n}\n article.content fieldset {\n\t margin: 0;\n\t padding: 0;\n\t border: 0;\n}\n article.content textarea {\n\t resize: vertical;\n}\n\n article.content ol, article.content ul {\n\t padding-left: 1.3em;\n\t padding-right: 1.5em;\n}\n article.content ol ol, article.content ul ul, article.content ul ol, article.content ol ul {\n\t margin: 0.5em 0 1em;\n}\n article.content ul {\n\t list-style: disc;\n}\n article.content ol {\n\t list-style: decimal;\n}\n article.content ul, article.content ol {\n\t max-width: 100%;\n}\n article.content li {\n\t margin: 0.5em 0;\n\t padding-left: 0.3em;\n\t line-height: 1.6em;\n}\n article.content dt {\n\t float: left;\n\t margin: 0 20px 0 0;\n\t width: 120px;\n\t color: #daf2fd;\n\t font-weight: 500;\n\t text-align: right;\n}\n article.content dd {\n\t margin: 0 0 5px 0;\n\t text-align: left;\n}\n article.content blockquote {\n\t margin: 1.5em 0;\n\t padding: 0 1.6em 0 1.6em;\n\t border-left: #daf2fd;\n}\n article.content blockquote p {\n\t margin: 0.8em 0;\n\t font-size: 1.2em;\n\t font-weight: 300;\n}\n article.content blockquote small {\n\t display: inline-block;\n\t margin: 0.8em 0 0.8em 1.5em;\n\t font-size: 0.9em;\n\t opacity: 0.8;\n}\n\n article.content blockquote cite {\n\t font-weight: bold;\n}\n article.content blockquote cite a {\n\t font-weight: normal;\n}\n \n`;\n\nexport const StyledPostContainer = styled.div`\n    margin: 30px 0;\n    .container {\n        max-width: 1120px;\n        margin: 0 auto;\n        padding: 0 4vw;\n    }\n\n    .content {\n        margin: 0 auto;\n        font-size: 16px;\n        line-height: 1.7em;\n    }\n\n    .content-body {\n        display: flex;\n        flex-direction: column;\n        font-family: var(--font-serif);\n    }\n\n    .post-full-content {\n        max-width: 720px;\n        margin: 0 auto;\n        background: #fff;\n    }\n\n    .post-feature-image img {\n        margin: 0 0 3vw;\n        width: 100%;\n        height: 500px;\n        object-fit: cover;\n    }\n\n    .content-title {\n        margin: 0 0 0.8em;\n        line-height: 60px;\n        font-size: 50px;\n        color: #3a3939;\n        font-weight: 800;\n    }\n    @media (max-width: 500px) {\n        .content-title {\n            margin: 0.8em 0;\n            font-size: 30px;\n        }\n        .content {\n            font-size: 14px;\n        }\n    }\n\n    .content-body h2 {\n        margin: 0.8em 0 0.4em 0;\n        font-size: 24px;\n        font-weight: 700;\n        color: #3a3939;\n    }\n    @media (max-width: 500px) {\n        .content-body h2 {\n            font-size: 20px;\n        }\n    }\n\n    .content-body h3 {\n        margin: 0.5em 0 0.2em 0;\n        font-size: 20px;\n        font-weight: 700;\n        color: #3a3939;\n    }\n    @media (max-width: 500px) {\n        .content-body h3 {\n            font-size: 18px;\n        }\n    }\n\n    .content-body h4 {\n        margin: 0.5em 0 0.2em 0;\n        font-size: 18px;\n        font-weight: 700;\n        color: #3a3939;\n    }\n    @media (max-width: 500px) {\n        .content-body h4 {\n            font-size: 16px;\n        }\n    }\n\n    .content-body h5 {\n        display: block;\n        margin: 0.5em 0;\n        padding: 1em 0 1.5em;\n        border: 0;\n        font-family: Georgia,serif;\n        color: #3a3939;\n        font-style: italic;\n        font-size: 16px;\n        line-height: 1.35em;\n        text-align: center;\n    }\n\n    .content-body h6 {\n        margin: 0.5em 0 0.2em 0;\n        font-size: 14px;\n        color: #3a3939;\n        font-weight: 700;\n    }\n\n    .content-body figure {\n        margin: 0.4em 0 1.6em;\n        font-size: 2.8rem;\n        font-weight: 700;\n    }\n\n    .content-body figure img {\n        max-width: 100%;\n        max-height: 100%;\n        height: unset;\n        width: unset;\n        margin-left: auto;\n        margin-right: auto;\n        display: block;\n    }\n\n    .content-body figure figcaption {\n        font-size: 10px;\n        text-align: center;\n    }\n\n    .content-body pre {\n        margin: 0.4em 0 1.8em;\n        font-size: 1.6rem;\n        line-height: 1.4em;\n        white-space: pre-wrap;\n        padding: 20px;\n        background: var(--color-base);\n        /* color: #fff; */\n        border-radius: 12px;\n    }\n`;\n\nexport default class Post extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            post: null,\n            loading: false\n        }\n    }\n\n    async componentDidMount() {\n            window.scrollTo({ top: 0, behavior: 'smooth' });\n            try {\n                console.log('this.props.match.params.id',this.props.match.params.id)\n                this.setState({loading: true});\n                const res = await fetch(`https://demo.ghost.io/ghost/api/v3/content/posts/${this.props.match.params.id}?key=22444f78447824223cefc48062`);\n                const response = await res.json();\n                if (response && response.posts && response.posts.length) {\n                    this.setState({\n                        loading: false,\n                        post: response.posts[0]\n                    });\n                }\n                this.setState({loading: false});\n            } catch (e) {\n                this.setState({loading: false});\n            }\n    }\n\n    render() {\n        return (\n            <>\n            <StyledPostContainer>\n                \n                {this.state.loading ? <AppShell/> : null}\n                {!this.state.loading && this.state.post ? \n                    <StyledDiv className=\"container\">\n                        <Header/>\n\n                        <article className=\"content\">\n                            { this.state.post.feature_image ?\n                                <figure className=\"post-feature-image\">\n                                    <img src={ this.state.post.feature_image } alt={ this.state.post.title } />\n                                </figure> : null }\n                            <section className=\"post-full-content\">\n                                <h1 className=\"content-title\">{this.state.post.title}</h1>\n\n                                {/* The main post content */ }\n                                {/* <root.div> */}\n                                <section\n                                    className=\"content-body load-external-scripts\"\n                                    dangerouslySetInnerHTML={{ __html: this.state.post.html }}\n                                />\n                                {/* </root.div> */}\n                            </section>\n                        </article>\n                    </StyledDiv>\n                : null}\n            </StyledPostContainer>\n\n            <Footer style={{ textAlign: 'center' }}>Created with ♡ by <a href='https://github.com/aswinzz'>@aswinzz</a></Footer>\n            </>\n        )\n    }\n}","import logo from './logo.svg';\nimport './App.css';\nimport Post from './pages/listing';\nimport SinglePost from './pages/post';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router basename={process.env.PUBLIC_URL}>\n      <div>\n        <Switch>\n              <Route exact path='/' component={Post} />\n              <Route path='/blog/:id' component={SinglePost} />\n          </Switch>\n      </div>\n    </Router>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}